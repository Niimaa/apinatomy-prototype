!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("jquery"));else if("function"==typeof define&&define.amd)define(["jquery"],t);else{var o=t("object"==typeof exports?require("jquery"):e.jQuery);for(var i in o)("object"==typeof exports?exports:e)[i]=o[i]}}(this,function(e){return function(e){function t(i){if(o[i])return o[i].exports;var n=o[i]={exports:{},id:i,loaded:!1};return e[i].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var o={};return t.m=e,t.c=o,t.p="",t(0)}([function(e,t,o){var i,n;i=[o(1)],n=function(e){"use strict";var t=e.circuitboard.plugin({name:"tile-open-snapshot",resolves:["tile-open","snapshot"]});t.insert("Snapshot.prototype.take",function(){var e=this;this.options.tilesOpen&&(this.object.tilesOpen={},this.circuitboard.traverseArtefactsByType("Tile",function(t){t.open&&(e.object.tilesOpen[t.model.id]=!0)})),this.options.tilesClosed&&(this.object.tilesClosed={},this.circuitboard.traverseArtefactsByType("Tile",function(t){t.open||(e.object.tilesClosed[t.model.id]=!0)}))}).insert("Snapshot.prototype.restore",function(){var e=this;this.options.tilesOpen&&Object.keys(this.object.tilesOpen).filter(function(t){return e.object.tilesOpen[t]}).forEach(function(t){e.circuitboard.tile(t).then(function(e){e.open=!0})}),this.options.tilesClosed&&Object.keys(this.object.tilesClosed).filter(function(t){return e.object.tilesClosed[t]}).forEach(function(t){e.circuitboard.tile(t).then(function(e){e.open=!1})})})}.apply(t,i),!(void 0!==n&&(e.exports=n))},function(t){t.exports=e}])});