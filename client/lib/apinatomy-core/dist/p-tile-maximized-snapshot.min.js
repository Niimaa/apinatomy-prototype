!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("jquery"));else if("function"==typeof define&&define.amd)define(["jquery"],e);else{var i=e("object"==typeof exports?require("jquery"):t.jQuery);for(var o in i)("object"==typeof exports?exports:t)[o]=i[o]}}(this,function(t){return function(t){function e(o){if(i[o])return i[o].exports;var r=i[o]={exports:{},id:o,loaded:!1};return t[o].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var i={};return e.m=t,e.c=i,e.p="",e(0)}([function(t,e,i){var o,r;o=[i(1)],r=function(t){"use strict";var e=t.circuitboard.plugin({name:"tile-maximized-snapshot",resolves:["tile-maximized","snapshot"]});e.insert("Snapshot.prototype.take",function(){var t=this;this.options.tilesMaximized&&(this.object.tilesMaximized={},this.circuitboard.traverseArtefactsByType("Tile",function(e){e.maximized&&(t.object.tilesMaximized[e.model.id]=!0)})),this.options.tilesNotMaximized&&(this.object.tilesNotMaximized={},this.circuitboard.traverseArtefactsByType("Tile",function(e){e.maximized||(t.object.tilesNotMaximized[e.model.id]=!0)}))}).insert("Snapshot.prototype.restore",function(){var t=this;this.options.tilesMaximized&&Object.keys(this.object.tilesMaximized).filter(function(e){return t.object.tilesMaximized[e]}).forEach(function(e){t.circuitboard.tile(e).then(function(t){t.maximized=!0})}),this.options.tilesNotMaximized&&Object.keys(this.object.tilesNotMaximized).filter(function(e){return t.object.tilesNotMaximized[e]}).forEach(function(e){t.circuitboard.tile(e).then(function(t){t.maximized=!1})})})}.apply(e,o),!(void 0!==r&&(t.exports=r))},function(e){e.exports=t}])});