!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("jquery"));else if("function"==typeof define&&define.amd)define(["jquery"],t);else{var i=t("object"==typeof exports?require("jquery"):e.jQuery);for(var o in i)("object"==typeof exports?exports:e)[o]=i[o]}}(this,function(e){return function(e){function t(o){if(i[o])return i[o].exports;var r=i[o]={exports:{},id:o,loaded:!1};return e[o].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var i={};return t.m=e,t.c=i,t.p="",t(0)}([function(e,t,i){var o,r;o=[i(1)],r=function(e){"use strict";var t=e.circuitboard.plugin["do"]("tile-maximized-snapshot",{resolves:["tile-maximized","snapshot"]});t.append("Snapshot.prototype.take",function(){var e=this;this.options.tilesMaximized&&(this.object.tilesMaximized={},this.circuitboard.traverseArtefactsByType("Tile",function(t){t.maximized&&(e.object.tilesMaximized[t.model.id]=!0)})),this.options.tilesNotMaximized&&(this.object.tilesNotMaximized={},this.circuitboard.traverseArtefactsByType("Tile",function(t){t.maximized||(e.object.tilesNotMaximized[t.model.id]=!0)}))}).append("Snapshot.prototype.restore",function(){var e=this;this.options.tilesMaximized&&Object.keys(this.object.tilesMaximized).filter(function(t){return e.object.tilesMaximized[t]}).forEach(function(t){e.circuitboard.tile(t).then(function(e){e.maximized=!0})}),this.options.tilesNotMaximized&&Object.keys(this.object.tilesNotMaximized).filter(function(t){return e.object.tilesNotMaximized[t]}).forEach(function(t){e.circuitboard.tile(t).then(function(e){e.maximized=!1})})})}.apply(t,o),!(void 0!==r&&(e.exports=r))},function(t){t.exports=e}])});