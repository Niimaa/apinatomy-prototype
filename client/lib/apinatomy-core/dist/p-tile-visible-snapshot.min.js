!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("jquery"));else if("function"==typeof define&&define.amd)define(["jquery"],t);else{var i=t("object"==typeof exports?require("jquery"):e.jQuery);for(var o in i)("object"==typeof exports?exports:e)[o]=i[o]}}(this,function(e){return function(e){function t(o){if(i[o])return i[o].exports;var s=i[o]={exports:{},id:o,loaded:!1};return e[o].call(s.exports,s,s.exports,t),s.loaded=!0,s.exports}var i={};return t.m=e,t.c=i,t.p="",t(0)}([function(e,t,i){var o,s;o=[i(1)],s=function(e){"use strict";var t=e.circuitboard.plugin["do"]("tile-visible-snapshot",{resolves:["tile-hidden","snapshot"]});t.append("Snapshot.prototype.take",function(){var e=this;this.options.tilesVisible&&(this.object.tilesVisible={},this.circuitboard.traverseArtefactsByType("Tile",function(t){t.visible&&(e.object.tilesVisible[t.model.id]=!0)})),this.options.tilesHidden&&(this.object.tilesHidden={},this.circuitboard.traverseArtefactsByType("Tile",function(t){t.visible||(e.object.tilesHidden[t.model.id]=!0)}))}).append("Snapshot.prototype.restore",function(){var e=this;this.options.tilesVisible&&Object.keys(this.object.tilesVisible).filter(function(t){return e.object.tilesVisible[t]}).forEach(function(t){e.circuitboard.tile(t).then(function(e){e.visible=!0})}),this.options.tilesHidden&&Object.keys(this.object.tilesHidden).filter(function(t){return e.object.tilesHidden[t]}).forEach(function(t){e.circuitboard.tile(t).then(function(e){e.visible=!1})})})}.apply(t,o),!(void 0!==s&&(e.exports=s))},function(t){t.exports=e}])});